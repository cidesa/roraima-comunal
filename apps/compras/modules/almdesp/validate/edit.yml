methods:
  post:
   - "cadphart{dphart}"
   - "cadphart{fecdph}"
   - "cadphart{reqart}"
   - "cadphart{codori}"
   - "cadphart{desdph}"

names:
  cadphart{dphart}:
    required:  Yes
    required_msg: El Número de Despacho no puedo estar en Blanco
    validators: UniqueValidator

  cadphart{fecdph}:
    required:  Yes
    required_msg: La Fecha no puedo estar en Blanco
    validators: FechaValidator, FechaValidator1

  cadphart{reqart}:
    required:  Yes
    required_msg: El Número de Requisión no puedo estar en Blanco
    validators: RequisionValidator

  cadphart{codori}:
    required:  No
    validators: OrigenValidator

  cadphart{desdph}:
    required:  Yes
    required_msg: La Descripción no puede estar en Blanco.
    validators: DescripcionValidator

FechaValidator1:
    class: CidesaDateValidator
    param:
        class:        Cpdefniv
        columnmin:    fecini
        columnmax:    feccie
        min_error:    La Fecha Especificada no puede ser Menor a la Fecha de Inicio del Período
        max_error:    La Fecha Especificada no puede ser Mayor a la Fecha de Fin del Período
        date_error:   Fecha Inválida

RequisionValidator:
    class: CidesaExistValidator
    param:
        class:    Careqart
        column:   reqart
        unique_error:   El Código de la Requision no existe.

AlmacenValidator:
    class: CidesaExistValidator
    param:
        class:    Cadefalm
        column:   codalm
        unique_error:   El Código del Almacen no existe.

UbicacionValidator:
    class: CidesaExistValidator
    param:
        class:    Cadefubi
        column:   codubi
        unique_error:   El Código de Ubicación no existe.

OrigenValidator:
    class: CidesaExistValidator
    param:
        class:    Bnubica
        column:   codubi
        unique_error:   El Código de la Unidad no existe.

UniqueValidator:
    class: sfPropelUniqueValidator
    param:
        class:    Cadphart
        column:   dphart
        unique_error:   El Código del Despacho ya existe. Por Favor, Cambiélo por otro.

FechaValidator:
    class: sfRegexValidator
    param:
        match:      yes
        pattern:    /^(3[01]|2?[0-9]|1?[0-9]|0?[1-9]|[12]d)\/(0?[1-9]|1[012])\/(\d{4})$/
        match_error: La Fecha  introducida es invalida

DescripcionValidator:
    class: sfStringValidator
    param:
        min:       2
        min_error: La descripción no puede tener menos de 2 caracteres
        max:       100
        max_error: La descripción no puede pasar de 100 caracteres