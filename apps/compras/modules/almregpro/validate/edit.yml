methods:
  post:
   - "caprovee{codpro}"
   - "caprovee{nompro}"
   - "caprovee{rifpro}"
   - "caprovee{limcre}"
   - "caprovee{capsus}"
   - "caprovee{cappag}"
   - "caprovee{fecinscir}"
   - "caprovee{fecreg}"
   - "caprovee{fecven}"
   - "caprovee{codcta}"
   - "caprovee{codord}"
   - "caprovee{codpercon}"
   - "caprovee{codctasec}"
   - "caprovee{codordadi}"
   - "caprovee{codperconadi}"
   - "caprovee{codordmercon}"
   - "caprovee{codpermercon}"
   - "caprovee{codordcontra}"
   - "caprovee{codpercontra}"
   - "caprovee{codban}"
   - "caprovee{codtip}"
   - "caprovee{nitpro}"

names:
  caprovee{codtip}:
    required:  No
    required_msg: El de Tipo de Cuenta no puedo estar en Blanco.
    validators: Validator_codtip

  caprovee{codban}:
    required:  No
    required_msg: El Código Bancario no puedo estar en Blanco.
    validators: Validator_codban

  caprovee{codpro}:
    required:  Yes
    required_msg: El Código no puedo estar en Blanco.
    validators: Validator_codpro

  caprovee{nompro}:
    required:  Yes
    required_msg: El Nombre no puedo estar en Blanco.
    validators: Validator_nompro

  caprovee{nitpro}:
    required:  Yes
    required_msg: Debe seleccionar el Tipo de Persona no puedo estar en Blanco.

  caprovee{rifpro}:
    required:  Yes
    required_msg: El Rif/CI Proveedor no puedo estar en Blanco.
    validators: Validator_rifpro

  caprovee{limcre}:
    required:  No
    validators: MyNumberValidator, MontoValidator

  caprovee{capsus}:
    required:  No
    validators: MyNumberValidator, MontoValidator

  caprovee{cappag}:
    required:  No
    validators: MyNumberValidator, MontoValidator

  caprovee{fecinscir}:
    required:  No
    validators: FechaValidator, FechaValidatorNow2

  caprovee{fecreg}:
    required:  No
    validators: FechaValidator, FechaValidatorNow2

  caprovee{fecven}:
    required:  No
    validators: FechaValidator

  caprovee{codcta}:
    required:  No
    validators: CuentaValidator

  caprovee{codord}:
    required:  No
    validators: CuentaValidator

  caprovee{codpercon}:
    required:  No
    validators: CuentaValidator

  caprovee{codctasec}:
    required:  No
    validators: CuentaValidator

  caprovee{codordadi}:
    required:  No
    validators: CuentaValidator

  caprovee{codperconadi}:
    required:  No
    validators: CuentaValidator

  caprovee{codordmercon}:
    required:  No
    validators: CuentaValidator

  caprovee{codpermercon}:
    required:  No
    validators: CuentaValidator

  caprovee{codordcontra}:
    required:  No
    validators: CuentaValidator

  caprovee{codpercontra}:
    required:  No
    validators: CuentaValidator



Validator_codtip:
    class: CidesaExistValidator
    param:
        class:    Tstipcue
        column:   codtip
        unique_error:   El Codigo del Tipo de Cuenta no existe


Validator_codban:
    class: CidesaExistValidator
    param:
        class:    Cabanco
        column:   codban
        unique_error:   El Codigo del Banco no existe

Validator_codpro:
    class: sfPropelUniqueValidator
    param:
        class:        Caprovee
        column:       codpro
        unique_error: El registro ya Existe intente con otro.

CuentaValidator:
    class: CidesaExistValidator
    param:
        class:    Contabb
        column:   codcta
        unique_error:   La Cuenta Contable no existe

Validator_nompro:
    class: sfStringValidator
    param:
        min:       2
        min_error: El nombre del Proveedor no puede tener menos de 2 caracteres
        max:       254
        max_error: El nombre del Proveedor no puede pasar mas de 254 caracteres

Validator_rifpro:
    class: sfPropelUniqueValidator
    param:
        class:        Caprovee
        column:       rifpro
        unique_error: El Rif/CI ya Existe intente con otro.

FechaValidator:
    class: sfRegexValidator
    param:
        match:      yes
        pattern:    /^(3[01]|2?[0-9]|1?[0-9]|0?[1-9]|[12]d)\/(0?[1-9]|1[012])\/(\d{4})$/
        match_error: La Fecha  introducida es invalida

MontoValidator:
    class: CidesaStringValidator
    param:
        values:    [ '/^([0-9]*(\.*([0-9]{2,}))*\,?[0-9]+|[0-9]+\,?[0-9]*)?$/' ]
        values_error: El valor introducido no cumple con el formato para montos

MyNumberValidator:
    class: sfNumberValidator
    param:
        type:         decimal
        type_error:   Por favor, Introduzca Números Decimales
        nan_error:    Por Favor, introduzca un Número Decimal
        min:          000000000000.00
        min_error:    El valor tiene que ser mayor que cero
        max:          999999999999.99
        max_error:    El valor debe contener maximo 999.999.999.999,99


FechaValidatorNow2:
    class:         CidesaDateNow
    param:
        compare: 'now'
        compare_error: La Fecha no puede ser mayor a la Fecha Actual
        operator: '<='
        date_error:  Fecha Inválida